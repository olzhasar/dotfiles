priority -50

# FORM SNIPPETS

snippet form "Form" b
class ${1:FORMNAME}(forms.Form):

	${2:# TODO: Define form fields here}
endsnippet

snippet modelform "ModelForm" b
class ${1}Form(forms.ModelForm):

	class Meta:
		model = $1
endsnippet

# MODELS SNIPPETS

snippet model "Model" b
class ${1:MODELNAME}(models.Model):
	$0
	class Meta:
		verbose_name = "$1"
		verbose_name_plural = "$1s"

	def __str__(self):
		return self.id

endsnippet

snippet modelfull "Model" b
class ${1:MODELNAME}(models.Model):
	${2:# TODO: Define fields here}

	class Meta:
		verbose_name = "$1"
		verbose_name_plural = "$1s"

	def __str__(self):
		return super($1, self).__str__()

	def save(self):
		return super($1, self).save()

	def get_absolute_url(self):
		return ('')

endsnippet

# VIEWS SNIPPETS

snippet adminview "Model Admin View" b
@admin.register($1)
class $1Admin(admin.ModelAdmin):
	'''
		Admin View for $1
	'''
	list_display = ('$2',)
	list_filter = ('$3',)
	inlines = [
		$4Inline,
	]
	raw_id_fields = ('$5',)
	readonly_fields = ('$6',)
	search_fields = ['$7']
endsnippet

snippet createview "Generic Create View" b
class ${1:MODEL_NAME}CreateView(CreateView):
	model = $1
	template_name = "${2:TEMPLATE_NAME}"
endsnippet

snippet deleteview "Generic Delete View" b
class ${1:MODEL_NAME}DeleteView(DeleteView):
	model = $1
	template_name = "${2:TEMPLATE_NAME}"
endsnippet

snippet detailview "Generic Detail View" b
class ${1:MODEL_NAME}DetailView(DetailView):
	model = $1
	template_name = "${2:TEMPLATE_NAME}"
endsnippet

snippet listview "Generic List View" b
class ${1:MODEL_NAME}ListView(ListView):
	model = $1
	template_name = "${2:TEMPLATE_NAME}"
endsnippet

snippet stackedinline "Stacked Inline" b
class $1Inline(admin.StackedInline):
	'''
	Stacked Inline View for $1
	'''
	model = ${2:$1}
	min_num = ${3:3}
	max_num = ${4:20}
	extra = ${5:1}
	raw_id_fields = ($6,)
endsnippet

snippet tabularinline "Tabular Inline" b
class $1Inline(admin.TabularInline):
	'''
	Tabular Inline View for $1
	'''
	model = ${2:$1}
	min_num = ${3:3}
	max_num = ${4:20}
	extra = ${5:1}
	raw_id_fields = ($6,)
endsnippet

snippet templateview "Generic Template View" b
class ${1:CLASS_NAME}(TemplateView):
	template_name = "${2:TEMPLATE_NAME}"
endsnippet

snippet updateview "Generic Update View" b
class ${1:MODEL_NAME}UpdateView(UpdateView):
	model = $1
	template_name = "${2:TEMPLATE_NAME}"
endsnippet

snippet dispatch "Dispatch View method" b
def dispatch(self, request, *args, **kwargs):
	return super(${1:CLASS_NAME}, self).dispatch(request, *args, **kwargs)
endsnippet

snippet context "get_context_data view method" b
def get_context_data(self, **kwargs):
	kwargs['extra_context'] = ${1:'New Value'}
	return super(${2:CLASS_NAME}, self).get_context_data(**kwargs)
endsnippet

# REST FRAMEWORK SNIPPETS

snippet ser "serializer" b
class ${1}Serializer(serializers.Serializer):
	$2
endsnippet

snippet modelser "serializer" b
class ${1}Serializer(serializers.ModelSerializer):
	$2

	class Meta:
		model = ${3}
endsnippet
